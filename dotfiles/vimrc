set nocompatible              " be iMproved, required
filetype off                  " required

" homebrew vim takes locale lang as default. Overriding it here
language en_US.UTF-8
set encoding=utf-8

filetype plugin indent on

syntax enable
let python_highlight_all=1
syntax on
colorscheme slate

" split navigations, use control + hjkl to navigate splitviews
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" show line number
set nu

" indent rules
set tabstop=4
set softtabstop=4
set shiftwidth=4
set textwidth=120
set expandtab
set autoindent
set fileformat=unix
set backspace=indent,eol,start  " more powerful backspacing

" hilight extra whitespaces
highlight BadWhitespace ctermbg=red guibg=red
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

let g:ycm_autoclose_preview_window_after_completion=1

" configure ALE
let g:ale_python_executable = 'python3'
let g:ale_python_pylint_options = '-d C0114,C0116,R0903,R0911,R0912,W0703,W1514'
" take pylint.rc from current or parent directory
function! FindConfig(prefix, what, where)
    let cfg = findfile(a:what, escape(a:where, ' ') . ';')
    return cfg !=# '' ? ' ' . a:prefix . shellescape(cfg) : ''
endfunction
autocmd FileType python let b:ale_python_pylint_options =
   \ get(g:, 'ale_python_pylint_options', '') .
   \ FindConfig('--rcfile=', 'pylint.rc', expand('<afile>:p:h', 1))
" let g:ale_cpp_cc_executable = 'g++'
let g:ale_cpp_cc_options = '-std=c++17 -Wall'

" always show powerline
" set laststatus=2

" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
nnoremap <C-n> :NERDTree<CR>
let NERDTreeMinimalUI=1
let NERDTreeWinSize=20
